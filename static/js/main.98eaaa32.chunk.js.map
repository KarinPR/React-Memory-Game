{"version":3,"sources":["Components/ThemeScreen/Themes.js","Components/SizeScreen/Sizes.js","Components/Header/Header.js","Components/Theme/Theme.js","Components/ThemeScreen/ThemeScreen.js","Components/Size/Size.js","Components/SizeScreen/SizeScreen.js","Components/Card/Card.js","Components/BoardGame/BoardGame.js","Components/WinScreen/WinScreen.js","Components/Player/Player.js","Components/PlayerBoard/PlayerBoard.js","Containers/CardDeck.js","Containers/PlayersList.js","Containers/App.js","serviceWorker.js","index.js"],"names":["Themes","id","folder","name","Sizes","size","Header","_ref","time","moves","playerName","highscore","clear","rulesClick","showRules","react_default","a","createElement","className","onClick","ToggleDisplay_default","if","tag","href","target","rel","Theme","theme","themeClick","ThemeScreen","themes","map","Components_Theme_Theme","key","toString","Size","sizeClick","concat","SizeScreen","title","sizes","Components_Size_Size","Card","img","isFlipped","isMatched","cardClick","disabled","alt","src","height","width","BoardGame","cards","card","index","Components_Card_Card","includes","WinScreen","highscoreslogan","winnerslogan","Player","pairs","PlayerBoard","players","player","divName","Components_Player_Player","pmoves","ppairs","CardDeck","themeArr","num","imgArr","sampleSize","reduce","acc","curCard","push","shuffle","propTypes","PropTypes","number","isRequired","PlayersList","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nextPlayer","state","setState","console","log","onClickTheme","activeFolder","showTheme","showPlayers","onClickPlayers","showSize","length","onClickSize","showBoard","startClock","setInterval","timming","onClickCard","flipped","assign","sameCard","isMatch","matched","toConsumableArray","resetBoard","setTimeout","onClickRules","onClickClear","window","location","reload","gameEnd","secondcard","find","toLowerCase","preLoadImages","Image","seconds","retrieveHighscore","localStorage","getItem","setHighscoreCache","Number","setItem","JSON","stringify","_this$state","clearInterval","winnerSlogan","parse","highscoreSlogan","pairsFound","playersNum","prevState","prevProp","_this$state2","Components_Header_Header","Components_ThemeScreen_ThemeScreen","Components_SizeScreen_SizeScreen","Components_PlayerBoard_PlayerBoard","Components_BoardGame_BoardGame","Components_WinScreen_WinScreen","Component","Boolean","hostname","match","ReactDOM","render","src_Containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kcAAaA,EAAS,CACtB,CACCC,GAAK,UACLC,OAAQ,OACRC,KAAM,QAEP,CACCF,GAAK,YACLC,OAAQ,UACRC,KAAM,WAEP,CACCF,GAAK,YACLC,OAAQ,UACRC,KAAM,YCdMC,EAAQ,CACrB,CACCC,KAAO,GAER,CACCA,KAAO,IAER,CACCA,KAAO,IAER,CACCA,KAAO,KCqCOC,SA3CA,SAAAC,GAAyE,IAAvEC,EAAuED,EAAvEC,KAAMC,EAAiEF,EAAjEE,MAAOC,EAA0DH,EAA1DG,WAAYC,EAA8CJ,EAA9CI,UAAWC,EAAmCL,EAAnCK,MAAOC,EAA4BN,EAA5BM,WAAaC,EAAeP,EAAfO,UACxE,OACCC,EAAAC,EAAAC,cAAA,OAAMC,UAAY,mBAAmBjB,GAAK,eACzCc,EAAAC,EAAAC,cAAA,UACKF,EAAAC,EAAAC,cAAA,qBAAYF,EAAAC,EAAAC,cAAA,QAAMC,UAAW,QAAjB,IAA0BV,EAA1B,KAAZ,KACAO,EAAAC,EAAAC,cAAA,sBAAaF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,IAA0BT,EAA1B,KAAb,gBAAkEM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaP,IAC/FI,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBC,QAAWP,KACnDG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BAA2BC,QAAWN,MAE5DE,EAAAC,EAAAC,cAAA,OAAKhB,GAAG,oBACPc,EAAAC,EAAAC,cAAA,MAAIhB,GAAG,wBAAP,oBACAc,EAAAC,EAAAC,cAAA,MAAIhB,GAAG,iBAAiBS,IAEzBK,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAeK,GAAMP,EAAWQ,IAAM,WACrCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAqCC,QAAWN,IAC7DE,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,aAAIF,EAAAC,EAAAC,cAAA,uBAAJ,YAAmCF,EAAAC,EAAAC,cAAA,uBAAnC,MACAF,EAAAC,EAAAC,cAAA,aAAIF,EAAAC,EAAAC,cAAA,wBAAJ,YAAoCF,EAAAC,EAAAC,cAAA,mCAApC,MACAF,EAAAC,EAAAC,cAAA,aAAIF,EAAAC,EAAAC,cAAA,yBAAJ,YAAqCF,EAAAC,EAAAC,cAAA,4BAArC,MACAF,EAAAC,EAAAC,cAAA,4CAAmCF,EAAAC,EAAAC,cAAA,2BAAnC,0CAAoGF,EAAAC,EAAAC,cAAA,4BAApG,KACAF,EAAAC,EAAAC,cAAA,aAAIF,EAAAC,EAAAC,cAAA,wBAAJ,iDAAyEF,EAAAC,EAAAC,cAAA,8BAAzE,MACAF,EAAAC,EAAAC,cAAA,qDAA4CF,EAAAC,EAAAC,cAAA,oCAA5C,KACAF,EAAAC,EAAAC,cAAA,wBAAeF,EAAAC,EAAAC,cAAA,oCAAf,iEACAF,EAAAC,EAAAC,cAAA,aAAIF,EAAAC,EAAAC,cAAA,4BACJF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,4FAAmFF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,oEAAoEC,OAAO,SAASC,IAAI,uBAAhG,iBACnFV,EAAAC,EAAAC,cAAA,8CAAqCF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,mDAAmDC,OAAO,SAASC,IAAI,uBAAsBV,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BACvJH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAAb,qCACAH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAY,UAAf,IAAyBH,EAAAC,EAAAC,cAAA,iGAAwFF,EAAAC,EAAAC,cAAA,WAAxF,mEAAzB,WC5BUS,SAPD,SAAAnB,GAA2C,IAAxCoB,EAAwCpB,EAAxCoB,MAAQzB,EAAgCK,EAAhCL,OAASC,EAAuBI,EAAvBJ,KAAOyB,EAAgBrB,EAAhBqB,WAExC,OACCb,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAAkBjB,GAAM0B,EAAOR,QAAW,kBAAMS,EAAWD,EAAOzB,KAAUC,KCqBhF0B,SAvBK,SAAAtB,GAA2B,IAAxBuB,EAAwBvB,EAAxBuB,OAAQF,EAAgBrB,EAAhBqB,WAC9B,OACCb,EAAAC,EAAAC,cAAA,OAAKC,UAAY,sBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,wBAAjB,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBAEfY,EAAOC,IAAK,SAACJ,GACZ,OACCZ,EAAAC,EAAAC,cAACe,EAAD,CACCC,IAAON,EAAM1B,GACb0B,MAASA,EAAM1B,GACfE,KAAQwB,EAAMxB,KACdD,OAAUyB,EAAMzB,OAAOgC,WACvBN,WAAcA,UCPPO,SAPF,SAAA5B,GAAyB,IAAtBF,EAAsBE,EAAtBF,KAAO+B,EAAe7B,EAAf6B,UAEtB,OACCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,sBAAsBjB,GAAE,aAAAoC,OAAiBhC,GAAQc,QAAW,kBAAMiB,EAAU/B,KAAQA,KCmBxFiC,SArBI,SAAA/B,GAAiC,IAA9BgC,EAA8BhC,EAA9BgC,MAAQC,EAAsBjC,EAAtBiC,MAAOJ,EAAe7B,EAAf6B,UACpC,OACCrB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,4BAAjB,IAA+CqB,EAA/C,KACAxB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,wBAEfsB,EAAMT,IAAK,SAAC1B,GACX,OACCU,EAAAC,EAAAC,cAACwB,EAAD,CACCR,IAAO5B,EAAKA,KACZA,KAAQA,EAAKA,KACb+B,UAAaA,UCCNM,SAXF,SAAAnC,GAAqE,IAAlEN,EAAkEM,EAAlEN,GAAK0C,EAA6DpC,EAA7DoC,IAAMzC,EAAuDK,EAAvDL,OAAQ0C,EAA+CrC,EAA/CqC,UAAWC,EAAoCtC,EAApCsC,UAAWC,EAAyBvC,EAAzBuC,UAAWC,EAAcxC,EAAdwC,SAEnE,OACChC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAmB,OAAsBO,GAAaC,EAAY,UAAY,IAAM1B,QAAY4B,EAAW,KAAO,kBAAMD,EAAU7C,KAC5Hc,EAAAC,EAAAC,cAAA,OAAKC,UAAY,uBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAa0B,GAAaC,EAAY,eAAiB,aAAcG,IAAO/C,EAAIgD,IAAOL,GAAaC,EAAb,UAAAR,OAAoCnC,EAApC,KAAAmC,OAA8CM,EAA9C,wCAA4FO,OAAO,QAAQC,MAAM,cCiBlMC,SAvBG,SAAA7C,GAAuE,IAApE8C,EAAoE9C,EAApE8C,MAAOhD,EAA6DE,EAA7DF,KAAMH,EAAuDK,EAAvDL,OAAQ0C,EAA+CrC,EAA/CqC,UAAWC,EAAoCtC,EAApCsC,UAAWC,EAAyBvC,EAAzBuC,UAAWC,EAAcxC,EAAdwC,SAC1E,OACChC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kDAAAmB,OAAsDhC,EAAtD,MAEZgD,EAAMtB,IAAK,SAACuB,EAAOC,GAClB,OACCxC,EAAAC,EAAAC,cAACuC,EAAD,CACCvB,IAAOsB,EACPtD,GAAMqD,EAAKrD,GACX0C,IAAOW,EAAKX,IACZzC,OAAUA,EACV0C,UAAaA,EAAUa,SAASH,EAAKrD,IACrC4C,UAAaA,EAAUY,SAASH,EAAKrD,IACrC6C,UAAaA,EACbC,SAAYA,GAAYF,EAAUY,SAASH,EAAKrD,WCFxCyD,SAdG,SAAAnD,GAA6D,IAA3DC,EAA2DD,EAA3DC,KAAOI,EAAoDL,EAApDK,MAAQH,EAA4CF,EAA5CE,MAAQkD,EAAoCpD,EAApCoD,gBAAkBC,EAAkBrD,EAAlBqD,aAC5D,OACC7C,EAAAC,EAAAC,cAAA,OAAKC,UAAY,cAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,gBAAhB,IAAiC0C,EAAjC,KACA7C,EAAAC,EAAAC,cAAA,oBAAWF,EAAAC,EAAAC,cAAA,gBAAQT,EAAR,aAAX,QACAO,EAAAC,EAAAC,cAAA,gBAAQR,EAAR,WADA,0BAEAM,EAAAC,EAAAC,cAAA,aAAIF,EAAAC,EAAAC,cAAA,gBAAQ0C,EAAR,KAAJ,KACA5C,EAAAC,EAAAC,cAAA,UAAQC,UAAY,MAAMC,QAAWP,GAArC,qBCMWiD,SAdA,SAAAtD,GAA2B,IAAzBJ,EAAyBI,EAAzBJ,KAAOM,EAAkBF,EAAlBE,MAAOqD,EAAWvD,EAAXuD,MAC9B,OACC/C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,iBAAiBjB,GAAG,mBACnCc,EAAAC,EAAAC,cAAA,OAAKC,UAAW,mBAAhB,IAAoCf,EAApC,KACAY,EAAAC,EAAAC,cAAA,OAAKC,UAAW,cACfH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKhB,GAAI,kBAAT,IAA4BQ,EAA5B,KACAM,EAAAC,EAAAC,cAAA,OAAKC,UAAW,oBAAhB,SACAH,EAAAC,EAAAC,cAAA,OAAKhB,GAAK,kBAAV,IAA6B6D,EAA7B,SCUWC,EAhBK,SAAAxD,GACnB,OADoCA,EAAdyD,QAEbjC,IAAK,SAACkC,GACb,OACClD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAmB,OAAO4B,EAAOC,QAAd,cAAmCjC,IAAOgC,EAAOhE,IAC9Dc,EAAAC,EAAAC,cAACkD,EAAD,CACChE,KAAQ8D,EAAO9D,KACfM,MAASwD,EAAOG,OAChBN,MAASG,EAAOI,2BCXhBC,EAAW,SAACC,EAAUC,GAC3B,IAAIvE,EAAK,EACLwE,EAAS,GACI,cAAbF,EACHE,EAAS,CAAE,aAAa,qBAAsB,gBAAiB,WAAY,aAAc,gBAAiB,mBAAmB,eAAgB,eAAgB,kBAAmB,WAAW,eAAgB,iBAAiB,eAAgB,gBAAkB,cACvO,cAAbF,EACVE,EAAS,CAAC,YAAa,kBAAmB,mBAAqB,8BAAgC,eAAiB,kBAAoB,iCAAmC,yBAA0B,eAAgB,mBAAoB,wBAA0B,kCAAoC,eAAiB,cAAgB,iBAAmB,mBAChU,YAAbF,IACVE,EAAS,CAAC,iBAAkB,iBAAmB,eAAiB,iBAAmB,oBAAsB,iBAAmB,YAAc,gBAAkB,oBAAsB,kBAAmB,cAAgB,kBAAoB,eAAiB,eAAiB,iBAAmB,sBAE/R,IACMpB,EADUqB,qBAAWD,EAAQD,EAAI,GACjBG,OAAQ,SAACC,EAAKC,EAAUtB,GAS1C,OARAqB,EAAIE,KAAK,CACR7E,GAAKA,IACL0C,IAAMkC,IAEPD,EAAIE,KAAK,CACR7E,GAAKA,IACL0C,IAAMkC,IAEAD,GACP,IACF,OAAOG,kBAAQ1B,IAEHiB,IAEfA,EAASU,UAAY,CACpBR,WAAMS,EAAUC,OAAOC,YC9BjB,IAAMC,EAAc,CAC3B,CACCnF,GAAK,EACLE,KAAO,WACP+D,QAAU,UACVE,OAAS,EACTC,OAAS,GAEV,CACCpE,GAAK,EACLE,KAAO,WACP+D,QAAU,UACVE,OAAS,EACTC,OAAS,ICsNKgB,qBApNd,SAAAA,EAAaC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAqCTQ,WAAa,WACiB,IAAzBP,EAAKQ,MAAM9B,OAAOhE,IACrBsF,EAAKS,SAAS,CAAC/B,OAASmB,EAAY,KACpCa,QAAQC,IAAIX,EAAKQ,MAAM9B,OAAO9D,QAE9BoF,EAAKS,SAAS,CAAC/B,OAASmB,EAAY,KACpCa,QAAQC,IAAIX,EAAKQ,MAAM9B,OAAO9D,QA5CZoF,EA+CpBY,aAAe,SAACxE,EAAQzB,GACnBqF,EAAKS,SAAS,CACjBlE,OAASH,EACTyE,aAAelG,EACfmG,WAAad,EAAKQ,MAAMM,UACxBC,aAAef,EAAKQ,MAAMO,eApDRf,EAuDpBgB,eAAiB,SAAC/B,GACL,IAARA,GACHe,EAAKS,SAAS,CACbhC,QAAU,CAACoB,EAAY,IACvBkB,aAAef,EAAKQ,MAAMO,YAC1BE,UAAYjB,EAAKQ,MAAMS,WAExBP,QAAQC,IAAId,EAAYqB,SACL,IAARjC,IACXe,EAAKS,SAAU,CACdhC,QAAUoB,EACVkB,aAAef,EAAKQ,MAAMO,YAC1BE,UAAYjB,EAAKQ,MAAMS,WAExBP,QAAQC,IAAId,EAAYqB,UArENlB,EAwElBmB,YAAc,SAACrG,GACdkF,EAAKS,SAAS,CACdxD,MAAQnC,EACRgD,MAAQiB,EAASiB,EAAKQ,MAAMjE,OAAQzB,GACpCmG,UAAYjB,EAAKQ,MAAMS,SACvBG,WAAapB,EAAKQ,MAAMY,YAE1BpB,EAAKqB,WAAaC,YAAa,kBAAMtB,EAAKuB,WAAW,MA/ElCvB,EAiFpBwB,YAAc,SAAC9G,GAEd,GADAsF,EAAKS,SAAS,CAACjD,UAAW,IACQ,IAA9BwC,EAAKQ,MAAMiB,QAAQP,OACnBlB,EAAKS,SAAS,CAACgB,QAAU,CAAC/G,GAAMQ,MAAQ8E,EAAKQ,MAAMtF,MAAQ,IAC3D8E,EAAKS,SAASR,OAAOyB,OAAO1B,EAAKQ,MAAM9B,OAAO,CAACG,OAAOmB,EAAKQ,MAAM9B,OAAOG,OAAS,KAEpFmB,EAAKS,SAAS,CAACjD,UAAW,QACpB,CAEN,GADAwC,EAAKS,SAAS,CAACjD,UAAW,IACtBwC,EAAK2B,SAASjH,GAAK,OACvBsF,EAAKS,SAAS,CAACgB,QAAU,CAACzB,EAAKQ,MAAMiB,QAAQ,GAAK/G,KAC9CsF,EAAK4B,QAAQlH,IAChBsF,EAAKS,SAAS,CAACoB,QAAO,GAAA/E,OAAAmD,OAAA6B,EAAA,EAAA7B,CAAOD,EAAKQ,MAAMqB,SAAlB,CAA4B7B,EAAKQ,MAAMiB,QAAQ,GAAK/G,MAC1EsF,EAAKS,SAASR,OAAOyB,OAAO1B,EAAKQ,MAAM9B,OAAO,CAACI,OAAOkB,EAAKQ,MAAM9B,OAAOI,OAAS,KACjFkB,EAAK+B,eAEL/B,EAAKS,SAAS,CAACjD,UAAW,IACQ,IAA9BwC,EAAKQ,MAAM/B,QAAQyC,QACtBlB,EAAKO,aAENyB,WAAW,kBAAMhC,EAAK+B,cAAc,QArGnB/B,EAyGpBiC,aAAe,WACdjC,EAAKS,SAAS,CAAElF,WAAayE,EAAKQ,MAAMjF,YACxCmF,QAAQC,IAAI,UA3GOX,EA6GpBkC,aAAe,WACdC,OAAOC,SAASC,UA9GGrC,EAgHpB+B,WAAa,WACZ/B,EAAKS,SAAS,CAACgB,QAAU,KACzBzB,EAAKS,SAAS,CAACjD,UAAW,IACrBwC,EAAKQ,MAAMqB,QAAQX,OAAS,IAAQlB,EAAKQ,MAAMvD,OACnD+C,EAAKsC,WApHatC,EAuHpB2B,SAAW,SAACjH,GAAD,OAAQsF,EAAKQ,MAAMiB,QAAQvD,SAASxD,IAvH3BsF,EAwHpB4B,QAAU,SAAClH,GACV,IAAM6H,EAAavC,EAAKQ,MAAM1C,MAAM0E,KAAK,SAAAzE,GAAI,OAAIA,EAAKrD,KAAOA,IAE7D,OADkBsF,EAAKQ,MAAM1C,MAAM0E,KAAK,SAAAzE,GAAI,OAAIiC,EAAKQ,MAAMiB,QAAQ,KAAO1D,EAAKrD,KAC7D0C,IAAIqF,gBAAkBF,EAAWnF,IAAIqF,eA3HpCzC,EA6HpB0C,cAAgB,WACf1C,EAAKQ,MAAM1C,MAAMtB,IAAI,SAACuB,GACrB,IAAML,EAAG,UAAAZ,OAAakD,EAAKQ,MAAMK,aAAxB,KAAA/D,OAAwCiB,EAAKX,IAA7C,yCAET,OADAsD,QAAQC,IAAIjD,IACL,IAAIiF,OAAQjF,IAAMA,KAjIPsC,EAoIlBuB,QAAU,WACXvB,EAAKS,SAAS,CAACmC,QAAU5C,EAAKQ,MAAMoC,QAAU,KArI3B5C,EAwIpB6C,kBAAoBC,aAAaC,QAAQ,aAxIrB/C,EA0IpBgD,kBAAoB,SAAC9H,GACpB8E,EAAKS,SAAS,CAAErF,UAAY6H,OAAO/H,KAC7B8E,EAAK6C,mBAA8C,IAAzB7C,EAAKQ,MAAMpF,YAC1CsF,QAAQC,IAAI,MACTmC,aAAaI,QAAQ,YAAaC,KAAKC,UAAUpD,EAAKQ,MAAMpF,cA9I7C4E,EAkJpBsC,QAAU,WAAM,IAAAe,EACcrD,EAAKQ,MAA3BpF,EADQiI,EACRjI,UAAYF,EADJmI,EACInI,MACnBoI,cAActD,EAAKqB,YACe,IAA9BrB,EAAKQ,MAAM/B,QAAQyC,OAClBrB,EAAY,GAAGf,OAASe,EAAY,GAAGf,OAC1CkB,EAAKS,SAAS,CAAC8C,aAAY,oBAAAzG,OAAuB+C,EAAY,GAAGhB,OAAtC,YACjBgB,EAAY,GAAGf,SAAWe,EAAY,GAAGf,OACnDkB,EAAKS,SAAS,CAAC8C,aAAY,qBACjB1D,EAAY,GAAGf,OAASe,EAAY,GAAGf,QACjDkB,EAAKS,SAAS,CAAC8C,aAAY,oBAAAzG,OAAuB+C,EAAY,GAAGhB,OAAtC,YAG5BmB,EAAKS,SAAS,CAAC8C,aAAY,iBAGV,IAAdnI,GACH4E,EAAKS,SAAS,CAAErF,UAAY+H,KAAKK,MAAMxD,EAAK6C,mBAAmB3H,QAC3DE,EAAYF,EACV8E,EAAKS,SAAS,CAAEgD,gBAAe,6BAAA3G,OAAgC1B,EAAhC,oCACvBA,IAAcF,EACxB8E,EAAKS,SAAS,CAAEgD,gBAAe,mFAAA3G,OAAsF1B,EAAtF,aACrBA,EAAYF,IACtB8E,EAAKS,SAAS,CAAEgD,gBAAe,mEAAA3G,OAAsE5B,EAAtE,aAC7B8E,EAAKgD,kBAAkB9H,MAG7B8E,EAAKgD,kBAAkB9H,GACvB8E,EAAKS,SAAS,CAAEgD,gBAAe,uDAAA3G,OAA0D5B,EAA1D,eA3K7B8E,EAAKQ,MAAQ,CACX1C,MAAO,GACPvB,OAAS9B,EACToG,aAAe,GACf5D,MAAQpC,EACR4G,QAAU,GACVI,QAAU,GACV6B,WAAa,EACb5C,WAAY,EACVC,aAAc,EAChBE,UAAW,EACXG,WAAY,EACZ7F,WAAY,EACZkD,QAAU,GACVkF,WAAa,CAAC,CAAE7I,KAAO,GAAM,CAAEA,KAAO,IACtC4D,OAAS,GACTxD,MAAQ,EACRE,UAAY4E,EAAK6C,mBAAqB,EACtCY,gBAAkB,GAClBF,aAAe,GACfX,QAAU,EACVpF,UAAW,GAvBGwC,mFA4BnBG,KAAKM,SAAS,CAAC/B,OAASmB,EAAY,gDAEjB+D,EAAWC,GAC1B1D,KAAKK,MAAM1C,MAAMoD,SAAW2C,EAAS/F,MAAMoD,QAC9Cf,KAAKuC,iGAiJE,IAAAoB,EACyJ3D,KAAKK,MAA/J1C,EADCgG,EACDhG,MAAOvB,EADNuH,EACMvH,OAAQqG,EADdkB,EACclB,QAAU1H,EADxB4I,EACwB5I,MAAOE,EAD/B0I,EAC+B1I,UAAWsD,EAD1CoF,EAC0CpF,OAAQD,EADlDqF,EACkDrF,QAASkF,EAD3DG,EAC2DH,WAAYF,EADvEK,EACuEL,gBAAiBF,EADxFO,EACwFP,aAAc1C,EADtGiD,EACsGjD,aAAc5D,EADpH6G,EACoH7G,MAAOwE,EAD3HqC,EAC2HrC,QAASI,EADpIiC,EACoIjC,QAASrE,EAD7IsG,EAC6ItG,SACrJ,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAChBH,EAAAC,EAAAC,cAACqI,EAAD,CAAQzI,WAAc6E,KAAK8B,aAAc1G,UAAa4E,KAAKK,MAAMjF,UAAWN,KAAQ2H,EAAS1H,MAASA,EAAOC,WAAcuD,EAAO9D,KAAMQ,UAAaA,EAAWC,MAAS8E,KAAK+B,eAC9K1G,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAeK,GAAMqE,KAAKK,MAAMM,UAAW/E,IAAM,WAChDP,EAAAC,EAAAC,cAACsI,EAAD,CAAcrI,UAAY,cAAcY,OAAUA,EAAQF,WAAc8D,KAAKS,gBAE9EpF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAeK,GAAMqE,KAAKK,MAAMO,YAAahF,IAAM,WAClDP,EAAAC,EAAAC,cAACuI,EAAD,CAAatI,UAAY,gBAAgBqB,MAAS,iBAAkBC,MAAS0G,EAAY9G,UAAasD,KAAKa,kBAE5GxF,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAeK,GAAMqE,KAAKK,MAAMS,SAAUlF,IAAM,WAC/CP,EAAAC,EAAAC,cAACuI,EAAD,CAAatI,UAAY,aAAaqB,MAAS,cAAeC,MAASA,EAAOJ,UAAasD,KAAKgB,eAEjG3F,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAeK,GAAMqE,KAAKK,MAAMY,UAAWrF,IAAM,WACjDP,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBAChBH,EAAAC,EAAAC,cAACwI,EAAD,CAAazF,QAAWA,IACxBjD,EAAAC,EAAAC,cAACyI,EAAD,CACCrG,MAASA,EACThD,KAAQmC,EACRtC,OAAUkG,EACVxD,UAAaoE,EACbnE,UAAauE,EACbtE,UAAa4C,KAAKqB,YAClBhE,SAAYA,MAIXhC,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,CAAeK,GAAM+F,EAAQX,SAAWjE,EAAOlB,IAAM,WACpDP,EAAAC,EAAAC,cAAC0I,EAAD,CAAWnJ,KAAQ2H,EAAS1H,MAASA,EAAOkD,gBAAmBqF,EAAiBpF,aAAgBkF,EAAclI,MAAS8E,KAAK+B,wBA/MnHmC,cCFEC,QACW,cAA7BnC,OAAOC,SAASmC,UAEe,UAA7BpC,OAAOC,SAASmC,UAEhBpC,OAAOC,SAASmC,SAASC,MACvB,iECRNC,IAASC,OAAOlJ,EAAAC,EAAAC,cAACiJ,EAAD,MAAQC,SAASC,eAAe,SDuH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.98eaaa32.chunk.js","sourcesContent":["export const Themes = [\r\n{\r\n\tid : 'petsdiv' , \r\n\tfolder: 'pets' , \r\n\tname: 'pets'\r\n}, \r\n{\r\n\tid : 'bigsisdiv' , \r\n\tfolder: 'big_sis' , \r\n\tname: 'big sis'\r\n}, \r\n{\r\n\tid : 'lilsisdiv' , \r\n\tfolder: 'lil_sis' , \r\n\tname: 'lil sis'\r\n}\r\n]","export const Sizes = [\r\n{\r\n\tsize : 8 , \r\n}, \r\n{\r\n\tsize : 16 , \r\n},\r\n{\r\n\tsize : 20 , \r\n},  \r\n{\r\n\tsize : 32 , \r\n}\r\n]","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport ToggleDisplay from 'react-toggle-display';\r\nimport './Header.css'\r\n\r\nconst Header = ({time, moves, playerName, highscore, clear, rulesClick , showRules}) => {\r\n\treturn (\r\n\t\t<div  className = 'header-container' id = \"uppernavbar\">\r\n\t\t\t<ul>\r\n\t\t      <li> time : <span className= \"time\"> {time} </span> </li>\r\n\t\t      <li> moves : <span className=\"moves\"> {moves} </span> highscore : <span className=\"highscore\">{highscore}</span></li>\r\n\t\t      <li><i className=\"fas fa-redo-alt redo\" onClick = {clear}></i></li>\r\n\t\t      <li><i className=\"fas fa-question question\" onClick = {rulesClick}></i></li>\r\n\t\t    </ul>\r\n\t\t\t<div id=\"currentplayerdiv\">\r\n\t\t\t\t<h1 id=\"currentlyplayertitle\">Current Player :</h1>\r\n\t\t\t\t<h1 id=\"currentplayer\">{playerName}</h1>\r\n\t\t\t</div>\r\n\t\t\t<ToggleDisplay if = {showRules} tag = 'section'>\r\n\t\t\t\t<div className=\"about\">\r\n\t\t\t\t\t<i className=\"far fa-arrow-alt-circle-left arrow\" onClick = {rulesClick} ></i>\r\n\t\t\t\t\t<h1>Rules</h1>\r\n\r\n\t\t\t\t\t<p> <strong>First</strong>, choose <strong>Theme</strong>. </p>\r\n\t\t\t\t\t<p> <strong>Second</strong>, choose <strong>number of players</strong>. </p>\r\n\t\t\t\t\t<p> <strong>Finally</strong>, choose <strong>Board size</strong>. </p>\r\n\t\t\t\t\t<p> Turn two cards, if you guessed <strong>CORRECTLY</strong> they will stay turned, and you get to <strong>PLAY AGAIN</strong>.</p>\r\n\t\t\t\t\t<p> <strong>IF NOT</strong> they will flip back and the turn goes to the <strong>OTHER PLAYER</strong>. </p>\r\n\t\t\t\t\t<p> Your moves to solve this memory will be <strong>counted and stored</strong>.</p> \r\n\t\t\t\t\t<p> So you can <strong>challenge yourself</strong> into beating your freinds and the highscore with less moves!</p>\r\n\t\t\t\t\t<p> <strong> Enjoy!!!</strong></p>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<h1>About</h1>\r\n\t\t\t\t\t<p>This is a little \"Birthday Present\" for my dauther and a project I made for the <a href=\"https://www.udemy.com/the-complete-web-developer-zero-to-mastery/\" target=\"_blank\" rel=\"noopener noreferrer\">Udemy course</a></p>\r\n\t\t\t\t\t<p>You can find my repository here:  <a href=\"https://github.com/KarinPR/React-Memory_Game.git\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"fab fa-github fa-2x\"></i></a></p>\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t<i className=\"far fa-copyright\"> Karin Povolozki-Rabichev, Israel</i>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<i className = 'rights'> <strong> All picutres used in this project originate from the internet and are property <br/>of their respective owners, No Copyright infringement intended.</strong> </i>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</ToggleDisplay>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Header;\r\n\r\nHeader.propTypes = {\r\n\ttime : PropTypes.number.isRequired,\r\n\tmoves : PropTypes.number.isRequired,\r\n\t// playerName : PropTypes.string.isRequired,\r\n\thighscore : PropTypes.oneOfType([\r\n\t\tPropTypes.string, PropTypes.number\r\n\t\t]).isRequired,\r\n\tclear : PropTypes.func.isRequired,\r\n\trulesClick : PropTypes.func.isRequired,\r\n\tshowRules : PropTypes.bool.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './Theme.css'\r\n\r\n\r\nconst Theme = ({ theme , folder,  name,  themeClick}) => {\r\n\t// console.log(img)\r\n\treturn (\r\n\t\t<div className = 'choosethemeitem' id = {theme} onClick = {() => themeClick(theme, folder)}>{name}</div>\r\n\t);\r\n}\r\n\r\nexport default Theme;\r\n\r\nTheme.propTypes = {\r\n\ttheme : PropTypes.string.isRequired,\r\n\tname : PropTypes.string.isRequired,\r\n\tthemeClick : PropTypes.func.isRequired,\r\n}\r\n","// import React, {useState} from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Theme from '../Theme/Theme';\r\nimport './ThemeScreen.css'\r\n\r\nconst ThemeScreen = ({ themes, themeClick}) => {\r\n\treturn (\r\n\t\t<div className = 'choosethememaindiv' >\r\n\t\t\t<div className = \"choosethemetitletext\" >Choose Theme</div>\r\n\t\t\t<div className = ' choosethemediv ' >\r\n\t\t\t\t{\r\n\t\t\t\t\tthemes.map( (theme) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Theme\r\n\t\t\t\t\t\t\t\tkey = {theme.id}\r\n\t\t\t\t\t\t\t\ttheme = {theme.id} \r\n\t\t\t\t\t\t\t\tname = {theme.name}\r\n\t\t\t\t\t\t\t\tfolder = {theme.folder.toString()}\r\n\t\t\t\t\t\t\t\tthemeClick = {themeClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\t\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ThemeScreen;\r\n\r\nThemeScreen.propTypes = {\r\n\t// themes : PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n\tthemeClick : PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './Size.css'\r\n\r\n\r\nconst Size = ({ size , sizeClick}) => {\r\n\t// console.log(img)\r\n\treturn (\r\n\t\t<div className = 'chooseboardsizeitem' id = {`choosesize${size}`} onClick = {() => sizeClick(size)}>{size}</div>\r\n\t);\r\n}\r\n\r\nexport default Size;\r\n\r\nSize.propTypes = {\r\n\tsize : PropTypes.number.isRequired,\r\n\tsizeClick : PropTypes.func.isRequired,\r\n}","// import React, {useState} from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Size from '../Size/Size';\r\nimport './SizeScreen.css'\r\n\r\nconst SizeScreen = ({ title , sizes, sizeClick}) => {\r\n\treturn (\r\n\t\t<div className = 'chooseboardsizemaindiv' >\r\n\t\t\t<div className = \"chooseboardsizetitletext\" > {title} </div>\r\n\t\t\t<div className = ' chooseboardsizediv ' >\r\n\t\t\t\t{\r\n\t\t\t\t\tsizes.map( (size) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Size\r\n\t\t\t\t\t\t\t\tkey = {size.size}\r\n\t\t\t\t\t\t\t\tsize = {size.size} \r\n\t\t\t\t\t\t\t\tsizeClick = {sizeClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\t\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SizeScreen;\r\n\r\nSizeScreen.propTypes = {\r\n\tsizes :  PropTypes.oneOfType([\r\n\t\tPropTypes.string, PropTypes.number,\r\n\t\tPropTypes.arrayOf(PropTypes.shape({}))\r\n\t]).isRequired,\r\n\tsizeClick : PropTypes.func.isRequired,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './Card.css'\r\n// import frontImage from './front_img.jpg'\r\n// import { lilsisarray } from './themes/lil_sis/lil_sis.js'\r\n\t\t\t// <CardBack image = {img}/> \r\n\r\nconst Card = ({ id , img , folder, isFlipped, isMatched, cardClick, disabled}) => {\r\n\t// console.log(img)\r\n\treturn (\r\n\t\t<div className = {`flip-container ${isFlipped || isMatched ? 'flipper' : ''}`} onClick = { disabled ? null : () => cardClick(id)} >\r\n\t\t\t<div className = ' card card8 flipper' >\r\n\t\t\t\t<img className = {isFlipped || isMatched ? 'front front8' : 'back back8'} alt = {id} src = {isFlipped || isMatched ?  `themes/${folder}/${img}.jpg` : `themes/back_img/front_img.jpg` } height=\"100px\" width=\"100px\"/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;\r\n\r\nCard.propTypes = {\r\n\tid : PropTypes.number.isRequired,\r\n\timg : PropTypes.string.isRequired,\r\n\tfolder : PropTypes.string.isRequired,\r\n\tisFlipped : PropTypes.bool.isRequired,\r\n\tisMatched : PropTypes.bool.isRequired,\r\n\tcardClick : PropTypes.func.isRequired,\r\n\tdisabled : PropTypes.bool.isRequired,\r\n}\r\n","// import React, {useState} from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Card from '../Card/Card';\r\nimport './BoardGame.css'\r\n\r\nconst BoardGame = ({ cards, size, folder, isFlipped, isMatched, cardClick, disabled}) => {\r\n\treturn (\r\n\t\t<div className = {`board-container match-container match-container${size} `} >\r\n\t\t\t{\r\n\t\t\t\tcards.map( (card , index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\tkey = {index}\r\n\t\t\t\t\t\t\tid = {card.id} \r\n\t\t\t\t\t\t\timg = {card.img}\r\n\t\t\t\t\t\t\tfolder = {folder}\r\n\t\t\t\t\t\t\tisFlipped = {isFlipped.includes(card.id)}\r\n\t\t\t\t\t\t\tisMatched = {isMatched.includes(card.id)} \r\n\t\t\t\t\t\t\tcardClick = {cardClick}\r\n\t\t\t\t\t\t\tdisabled = {disabled || isMatched.includes(card.id)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\t\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BoardGame;\r\n\r\nBoardGame.propTypes = {\r\n\tcards : PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n\tsize : PropTypes.oneOfType([\r\n\t\tPropTypes.string, PropTypes.number,\r\n\t\tPropTypes.arrayOf(PropTypes.shape({}))\r\n\t]).isRequired,\r\n\tfolder : PropTypes.string.isRequired,\r\n\tisFlipped : PropTypes.arrayOf(PropTypes.number).isRequired,\r\n\tisMatched : PropTypes.arrayOf(PropTypes.number).isRequired,\r\n\tcardClick : PropTypes.func.isRequired,\r\n\tdisabled : PropTypes.bool.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './WinScreen.css'\r\n\r\nconst WinScreen = ({time , clear,  moves , highscoreslogan , winnerslogan}) => {\r\n\treturn (\r\n\t\t<div className = 'winoverlay'>\r\n\t\t\t<div className = 'box'>\r\n\t\t\t\t<h1 className = 'winnerslogan'> {winnerslogan} </h1>\r\n\t\t\t\t<p>It took <span> {time} seconds </span>  and  \r\n\t\t\t\t<span> {moves} moves </span> to solve this memory.</p>\r\n\t\t\t\t<p> <span> {highscoreslogan} </span> </p>\r\n\t\t\t\t<button className = 'red' onClick = {clear} > Try again ? </button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default WinScreen;\r\n\r\nWinScreen.propTypes = {\r\n\ttime : PropTypes.number.isRequired,\r\n\tclear : PropTypes.func.isRequired,\r\n\tmoves : PropTypes.number.isRequired,\r\n\thighscoreslogan : PropTypes.string.isRequired,\r\n\twinnerslogan :PropTypes.string.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport './Player.css'\r\n\r\nconst Player = ({name , moves, pairs}) => {\r\n\treturn (\r\n\t\t<div className =\"playerscorediv\" id=\"playerscorediv1\">\r\n\t\t\t<div className =\"playerscoretext\"> {name} </div> \r\n\t\t\t<div className =\"scoreboard\">\r\n\t\t\t\t<div> moves </div> \r\n\t\t\t\t<div id =\"playeronescore\"> {moves} </div>\r\n\t\t\t\t<div className =\"matchedpairstext\">Pairs</div>\r\n\t\t\t\t<div id = \"playeronepairs\"> {pairs} </div>\r\n\t\t\t</div>\t \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Player;\r\n\r\nPlayer.propTypes = {\r\n\tname : PropTypes.string.isRequired,\r\n\tmoves : PropTypes.number.isRequired,\r\n\tpairs : PropTypes.number.isRequired\r\n}","// import React, {useState} from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport Player from '../Player/Player';\r\n// import './BoardGame.css'\r\n\r\nconst PlayerBoard = ({ players }) => {\r\n\treturn (\r\n\t\tplayers.map( (player) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className = {`${player.divName}-container`} key = {player.id} > \r\n\t\t\t\t\t<Player\t \r\n\t\t\t\t\t\tname = {player.name} \r\n\t\t\t\t\t\tmoves = {player.pmoves} \r\n\t\t\t\t\t\tpairs = {player.ppairs}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t})\t\r\n\t);\r\n}\r\n\r\nexport default PlayerBoard;\r\n\r\nPlayerBoard.propTypes = {\r\n\tplayers : PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n}\r\n","import {sampleSize , shuffle} from 'lodash';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst CardDeck = (themeArr, num) => {\r\n\tlet id = 0\r\n\tlet imgArr = []\r\n\tif (themeArr === 'lilsisdiv') {\r\n\t\timgArr = [ 'lil_80s_bb','lil_babeinthewoods', 'lil_bigcityBB', 'lil_luxe', 'lil_roller', 'lil_scribbles', 'lil_shimonequeen','lil_sk8erboi', 'lil_asifbaby', 'lil_babycartoon', 'lil_dawn','lil_kansasQT', 'lil_kittyqueen','lil_missjive', 'lil_splatters' , 'lil_yangQT' ];\r\n\t} else if (themeArr === 'bigsisdiv') {\r\n\t\timgArr = ['big_hoops', 'bigsis_babyglam', 'bigsis_ballerina' , 'bigsis_brrr_bb_glam_glitter' , 'bigsis_cards' , 'bigsis_confetti' , 'bigsis_curious_qt_glam_glitter' , 'bigsis_dj_glam_glitter', 'bigsis_dusti', 'bigsis_fancygirl', 'bigsis_ironOntransfer' , 'bigsis_kitty_queen_glam_glitter' , 'bigsis_Lotta' , 'bigsis_Luxe' , 'bigsis_mermaid' , 'bigsis_sleeping'];\r\n\t} else if (themeArr === 'petsdiv') {\r\n\t\timgArr = ['pets_4funkykat', 'pets_4showpony' , 'pets_babydog' , 'pets_bonbonham' , 'pets_crystalbunny' , 'pets_divacolor' , 'pets_djk9' , 'pets_fuzzyfan' , 'pets_googoomewmew' , 'pets_headphones', 'pets_hophop' , 'pets_hopskittea' , 'pets_mchammy' , 'pets_mermaid' , 'pets_purrrbaby' , 'pets_shortstophop'];\r\n\t}\r\n\tconst randArr = sampleSize(imgArr, num/2);\r\n\tconst cards = randArr.reduce ((acc, curCard , index) => {\r\n   \t\tacc.push({\r\n   \t\t\tid : id++,\r\n\t   \t\timg : curCard\r\n   \t\t})\r\n   \t\tacc.push({\r\n   \t\t\tid : id++,\r\n\t   \t\timg : curCard\r\n   \t\t})\r\n\t   \treturn acc;\r\n   },[])\r\n   return shuffle(cards);\r\n}\r\nexport default CardDeck;\r\n\r\nCardDeck.propTypes = {\r\n\tnum : PropTypes.number.isRequired,\r\n}","export const PlayersList = [\r\n{\r\n\tid : 1 , \r\n\tname : 'Player 1', \r\n\tdivName : 'player1' , \r\n\tpmoves : 0, \r\n\tppairs : 0\r\n}, \r\n{\r\n\tid : 2 , \r\n\tname : 'Player 2' , \r\n\tdivName : 'player2' , \r\n\tpmoves : 0, \r\n\tppairs : 0\r\n}\r\n]","import React, { Component } from 'react';\r\nimport ToggleDisplay from 'react-toggle-display';\r\nimport { Themes } from '../Components/ThemeScreen/Themes'\r\nimport { Sizes } from '../Components/SizeScreen/Sizes'\r\nimport Header from '../Components/Header/Header';\r\nimport ThemeScreen from '../Components/ThemeScreen/ThemeScreen';\r\nimport SizeScreen from '../Components/SizeScreen/SizeScreen';\r\nimport BoardGame from '../Components/BoardGame/BoardGame';\r\nimport WinScreen from '../Components/WinScreen/WinScreen';\r\nimport PlayerBoard from '../Components/PlayerBoard/PlayerBoard';\r\nimport CardDeck from './CardDeck'\r\nimport { PlayersList } from './PlayersList'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\tconstructor (props) {\r\n    super(props)\r\n\t    this.state = {\r\n\t      cards: [] ,\r\n\t      themes : Themes ,\r\n\t      activeFolder : '',\r\n\t      sizes : Sizes ,\r\n\t      flipped : [] ,\r\n\t      matched : [] ,\r\n\t      pairsFound : 0 ,\r\n\t      showTheme : true ,\r\n  \t      showPlayers : false ,\r\n\t      showSize : false ,\r\n\t      showBoard : false ,\r\n\t      showRules : false ,\r\n\t      players : [],\r\n\t      playersNum : [{ size : 1 } , { size : 2 }] ,\r\n\t      player : [],\r\n\t      moves : 0 ,\r\n\t      highscore : this.retrieveHighscore || 0 ,\r\n\t      highscoreSlogan : '',\r\n\t      winnerSlogan : '',\r\n\t      seconds : 0,\r\n\t      disabled : false\r\n\t    };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({player : PlayersList[0]})\r\n\t}\r\n\tcomponentDidUpdate (prevState, prevProp ) {\r\n\t\tif (this.state.cards.length !== prevProp.cards.length) {\r\n\t\t\tthis.preLoadImages()\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n \t}\r\n\t\r\n\tnextPlayer = () => {\r\n\t\tif (this.state.player.id === 1 ) {\r\n\t\t\tthis.setState({player : PlayersList[1] })\r\n\t\t\tconsole.log(this.state.player.name)\r\n\t\t} else {\r\n\t\t\tthis.setState({player : PlayersList[0] })\r\n\t\t\tconsole.log(this.state.player.name)\r\n\t\t}\r\n\t}\r\n\tonClickTheme = (theme , folder) => {\r\n      this.setState({ \r\n\t\t\tthemes : theme , \r\n\t\t\tactiveFolder : folder , \r\n\t\t\tshowTheme : !this.state.showTheme , \r\n\t\t\tshowPlayers : !this.state.showPlayers \r\n\t\t})\r\n  \t}\r\n\tonClickPlayers = (num) => {\r\n\t\tif (num === 1) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tplayers : [PlayersList[0]] ,\r\n\t\t\t\tshowPlayers : !this.state.showPlayers , \r\n\t\t\t\tshowSize : !this.state.showSize\r\n\t\t\t})\r\n\t\t\tconsole.log(PlayersList.length)\r\n\t\t} else if ( num === 2) {\r\n\t\t\tthis.setState ({\r\n\t\t\t\tplayers : PlayersList , \r\n\t\t\t\tshowPlayers : !this.state.showPlayers , \r\n\t\t\t\tshowSize : !this.state.showSize\r\n\t\t\t})\r\n\t\t\tconsole.log(PlayersList.length)\r\n\t\t}\r\n\t}\r\n  \tonClickSize = (size) => {\r\n  \t\tthis.setState({ \r\n\t\t\t\tsizes : size , \r\n\t\t\t\tcards : CardDeck(this.state.themes, size), \r\n\t\t\t\tshowSize : !this.state.showSize , \r\n\t\t\t\tshowBoard : !this.state.showBoard \r\n\t\t\t})\t\r\n\t\tthis.startClock = setInterval((() => this.timming()),1000)\r\n  \t}\r\n\tonClickCard = (id) => {\r\n\t\tthis.setState({disabled : true})\r\n\t\tif (this.state.flipped.length === 0) {\r\n\t    \tthis.setState({flipped : [id] , moves : this.state.moves + 1})\r\n\t    \tthis.setState(Object.assign(this.state.player,{pmoves:this.state.player.pmoves + 1}));\r\n\t    \t// console.log(this.state.player.pmoves)\r\n\t\t\tthis.setState({disabled : false})\r\n\t\t} else {\r\n\t\t\tthis.setState({disabled : false})\r\n\t\t\tif (this.sameCard(id)) return;\r\n\t\t\tthis.setState({flipped : [this.state.flipped[0] , id]})\r\n\t\t\tif (this.isMatch(id)) {\r\n\t\t\t\tthis.setState({matched : [...this.state.matched , this.state.flipped[0] , id]})\r\n\t\t\t\tthis.setState(Object.assign(this.state.player,{ppairs:this.state.player.ppairs + 1}));\r\n\t\t\t\tthis.resetBoard()\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({disabled : true})\r\n\t\t\t\tif (this.state.players.length === 2) {\r\n\t\t\t\t\tthis.nextPlayer()\r\n\t\t\t\t}\r\n\t\t\t\tsetTimeout(() => this.resetBoard(), 800);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tonClickRules = () => {\r\n\t\tthis.setState({ showRules : !this.state.showRules })\r\n\t\tconsole.log('click')\r\n\t}\r\n\tonClickClear = () => {\r\n\t\twindow.location.reload()\r\n\t}\r\n\tresetBoard = () => {\r\n\t\tthis.setState({flipped : []})\r\n\t\tthis.setState({disabled : false})\r\n\t\tif ((this.state.matched.length + 2 ) === this.state.sizes) {\r\n\t\t\tthis.gameEnd()\r\n\t\t}\r\n\t}\r\n\tsameCard = (id) => this.state.flipped.includes(id)\r\n\tisMatch = (id) => {\r\n\t\tconst secondcard = this.state.cards.find(card => card.id === id)\r\n\t\tconst firstcard = this.state.cards.find(card => this.state.flipped[0] === card.id)\r\n\t\treturn (firstcard.img.toLowerCase() === secondcard.img.toLowerCase())\r\n\t}\r\n\tpreLoadImages = () => {\r\n\t\tthis.state.cards.map((card) =>{\r\n\t\t\tconst src = `themes/${this.state.activeFolder}/${card.img}.jpg , themes/back_img/front_img.jpg `\r\n\t\t\tconsole.log(src)\r\n\t\t\treturn new Image().src = src\r\n\t\t})\r\n\t}\r\n  \ttimming = () => {\r\n\t\tthis.setState({seconds : this.state.seconds + 1 })\r\n\t}\r\n\r\n\tretrieveHighscore = localStorage.getItem('highscore')\r\n\t\r\n\tsetHighscoreCache = (moves) =>  {\r\n\t\tthis.setState({ highscore : Number(moves)})\r\n\t\t\tif (!this.retrieveHighscore || this.state.highscore === 0) {\r\n\t\t\tconsole.log('hi')\r\n\t    \tlocalStorage.setItem('highscore', JSON.stringify(this.state.highscore));\r\n\t\t}\r\n  \t}\r\n\t\r\n\tgameEnd = () => {\r\n\t\tconst {highscore , moves } = this.state\r\n\t\tclearInterval(this.startClock)\r\n\t\tif (this.state.players.length === 2) {\r\n\t\t\tif (PlayersList[0].ppairs > PlayersList[1].ppairs) {\r\n\t\t\t\tthis.setState({winnerSlogan : `Player 1 WINS by ${PlayersList[0].pmoves} moves`});\r\n\t\t\t} else if (PlayersList[0].ppairs === PlayersList[1].ppairs) {\r\n\t\t\t\tthis.setState({winnerSlogan : `You both WINNERS`});\r\n\t\t\t} else if (PlayersList[0].ppairs < PlayersList[1].ppairs) {\r\n\t\t\t\tthis.setState({winnerSlogan : `Player 2 WINS by ${PlayersList[1].pmoves} moves`});\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.setState({winnerSlogan : `GOOD GAME!!!`});\r\n\t\t}\r\n\t\t\r\n\t\tif (highscore !== 0) {\r\n\t\t\tthis.setState({ highscore : JSON.parse(this.retrieveHighscore).moves})\r\n\t\t\tif (highscore > moves) {\r\n      \t\t\tthis.setState({ highscoreSlogan : `Your current highscore is ${highscore} moves - try again to beat it.` })\r\n    \t\t} else if (highscore === moves) {\r\n    \t\t\tthis.setState({ highscoreSlogan : `That was close, just one move less for a new highscore! Your highscore is still ${highscore} moves.` })\r\n    \t\t} else if (highscore < moves) {\r\n    \t\t\tthis.setState({ highscoreSlogan : `Congratulations, you beat your highscore! Your new highscore is ${moves} moves.` })\r\n      \t\t\tthis.setHighscoreCache(moves)\r\n\t\t\t}\t \r\n\t\t} else {\r\n\t\t\tthis.setHighscoreCache(moves)\r\n\t\t\tthis.setState({ highscoreSlogan : `You finished your first game! Your new highscore is ${moves} moves.` })\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {cards, themes, seconds,  moves, highscore, player, players, playersNum, highscoreSlogan, winnerSlogan, activeFolder, sizes, flipped, matched, disabled} = this.state\t\r\n\t\treturn (\r\n\t\t\t\t<div className = 'body-container'>\r\n\t\t\t\t\t<Header rulesClick = {this.onClickRules} showRules = {this.state.showRules} time = {seconds} moves = {moves} playerName = {player.name} highscore = {highscore} clear = {this.onClickClear}/>\r\n\t\t\t\t\t<ToggleDisplay if = {this.state.showTheme} tag = 'section'>\r\n\t\t\t\t\t\t<ThemeScreen  className = 'themescreen' themes = {themes} themeClick = {this.onClickTheme}/>\r\n\t\t\t\t\t</ToggleDisplay>\r\n\t\t\t\t\t<ToggleDisplay if = {this.state.showPlayers} tag = 'section'>\r\n\t\t\t\t\t\t<SizeScreen  className = 'playersscreen' title = {'Choose Players'} sizes = {playersNum} sizeClick = {this.onClickPlayers}/>\r\n\t\t\t\t\t</ToggleDisplay>\r\n\t\t\t\t\t<ToggleDisplay if = {this.state.showSize} tag = 'section'>\r\n\t\t\t\t\t\t<SizeScreen  className = 'sizescreen' title = {'Choose Size'} sizes = {sizes} sizeClick = {this.onClickSize}/>\r\n\t\t\t\t\t</ToggleDisplay>\r\n\t\t\t\t\t<ToggleDisplay if = {this.state.showBoard} tag = 'section'>\r\n\t\t\t\t\t<div className = 'game-container'>\r\n\t\t\t\t\t\t<PlayerBoard players = {players}/>\r\n\t\t\t\t\t\t<BoardGame\r\n\t\t\t\t\t\t\tcards = {cards}\r\n\t\t\t\t\t\t\tsize = {sizes}\r\n\t\t\t\t\t\t\tfolder = {activeFolder}\r\n\t\t\t\t\t\t\tisFlipped = {flipped}\r\n\t\t\t\t\t\t\tisMatched = {matched} \r\n\t\t\t\t\t\t\tcardClick = {this.onClickCard}\r\n\t\t\t\t\t\t\tdisabled = {disabled} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    </ToggleDisplay>\r\n\t\t\t\t    <ToggleDisplay if = {matched.length === sizes} tag = 'section'>\r\n\t\t\t\t\t    <WinScreen time = {seconds} moves = {moves} highscoreslogan = {highscoreSlogan} winnerslogan = {winnerSlogan} clear = {this.onClickClear}/>\r\n\t\t\t\t    </ToggleDisplay>   \r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import MatchContainer from './Components/MatchContainer'\nimport App from './Containers/App';\n\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}